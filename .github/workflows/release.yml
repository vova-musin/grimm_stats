name: Release GrimmStats

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write

jobs:
  build-and-release:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        shell: pwsh
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller pillow

      - name: Build GrimmStats.exe
        shell: pwsh
        run: |
          python -m PyInstaller --noconfirm --clean --onefile --windowed --name GrimmStats --add-data "version.json;." main.py

      - name: Create or update GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: dist/GrimmStats.exe

      - name: Update version.json in main
        shell: pwsh
        env:
          REPO: ${{ github.repository }}
          TAG: ${{ github.ref_name }}
        run: |
          if ($env:TAG -match '^(v?)([0-9]+)\.([0-9]+)\.([0-9]+)$') {
            $semver = "$($Matches[2]).$($Matches[3]).$($Matches[4])"
            $ver = [int]$Matches[2]*100 + [int]$Matches[3]*10 + [int]$Matches[4]
            $obj = Get-Content version.json | ConvertFrom-Json
            $obj.version = $ver
            $obj.semver = $semver
            $obj.exe_url = "https://github.com/$env:REPO/releases/download/$env:TAG/GrimmStats.exe"
            ($obj | ConvertTo-Json -Depth 6) | Set-Content version.json -Encoding UTF8
            git config user.name "github-actions"
            git config user.email "github-actions@github.com"
            git fetch origin main
            git checkout main
            git pull --ff-only origin main
            git add version.json
            git commit -m "Bump manifest to $semver [CI]" || echo "No changes in version.json"
            git push origin HEAD:main
          }
